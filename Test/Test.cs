using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NetFwTypeLib;
using System.ServiceProcess;
using System.Diagnostics;
using static System.Net.Mime.MediaTypeNames;
using System.Threading;
using System.Security.Cryptography;
using System.Reflection;
using Microsoft.Win32;
using System.Xml.Linq;
using System.Text.RegularExpressions;
using System.Net;
using System.Runtime.CompilerServices;
using System.IO;
using System.Management.Automation;
using System.Runtime.InteropServices;
using System.Net.Sockets;

namespace Test
{
    internal class Program
    {


        //#############################################################################################

        
     
        static void Main()
        {



            INetFwRule2 inboundRule = (INetFwRule2)Activator.CreateInstance(Type.GetTypeFromProgID("HNetCfg.FwRule"));
            inboundRule.Enabled = true;
            inboundRule.Action = NET_FW_ACTION_.NET_FW_ACTION_BLOCK;
            inboundRule.Name = "11";
            inboundRule.Description = "Blocks access of IP.\nGenerated by OpenSSH-Fail2Ban (CLI) on date.";
            inboundRule.Grouping = "OpenSSH Fail2Ban";
            inboundRule.RemoteAddresses = "4.4.4.4";
            inboundRule.Protocol = (Int32)NET_FW_IP_PROTOCOL_.NET_FW_IP_PROTOCOL_TCP;
            inboundRule.Protocol = (Int32)NET_FW_IP_PROTOCOL_.NET_FW_IP_PROTOCOL_UDP;
            inboundRule.RemotePorts = "3,4-6dd,8";

            INetFwPolicy2 firewallPolicy = (INetFwPolicy2)Activator.CreateInstance(Type.GetTypeFromProgID("HNetCfg.FwPolicy2"));
            firewallPolicy.Rules.Add(inboundRule);



        }
    }
}
